plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
//    maven { url 'https://repo.spring.io/milestone' }
//    maven { url 'https://repo.spring.io/snapshot' }
}



java {
    sourceCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // QueryDSL 관련 의존성
//    implementation 'com.querydsl:querydsl-jpa'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'

//    // 테스트 관련 의존성
//    testImplementation platform('org.junit:junit-bom:5.9.1')
//    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Spring Boot 및 Spring Cloud 의존성
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JSON Web Token 관련 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.3'

    // WebSocket 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'

    // Spring Boot Starter Web 제외 설정
    configurations {
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }

    // Lombok 및 개발 툴 의존성
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Cloud 의존성 관리
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
        }
    }
}


bootJar {
    enabled = true
    archiveFileName = 'Api-gateway-0.0.1-SNAPSHOT.jar' // 생성될 JAR 파일명 설정
    destinationDirectory = file("$buildDir") // build/libs 폴더에 저장
}
//jar {
//    enabled = true
//}
